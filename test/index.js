'use strict';

// Imports

const Lab = require('lab');
const Code = require('code');
const Sut = require('../');


// Test shortcuts

const lab = module.exports.lab = Lab.script();
const describe = lab.describe;
const it = lab.it;
const beforeEach = lab.beforeEach;
const expect = Code.expect;


describe('better-map', () => {

    let test;

    beforeEach((done) => {

        test = new Sut([
            ['one', 1],
            ['two', 2]
        ]);

        return done();
    });

    describe('entriesArray', () => {

        it('should return an array of key and value as an array in the order they were added into the map', (done) => {

            const actual = test.entriesArray();

            expect(actual).to.equal([['one', 1], ['two', 2]]);

            return done();
        });
    });

    describe('keysArray', () => {

        it('should return the keys as an array in the order they were added into the map', (done) => {

            const actual = test.keysArray();

            expect(actual).to.equal(['one', 'two']);

            return done();
        });
    });

    describe('valuesArray', () => {

        it('should return the values as an array in the order they were added into the map', (done) => {

            const actual = test.valuesArray();

            expect(actual).to.equal([1, 2]);

            return done();
        });
    });

    describe('map', () => {

        it('should return an array of values generated by the callback function', (done) => {

            const actual = test.map((value, key) => `${key} = ${value}`);

            expect(actual).to.equal(['one = 1', 'two = 2']);

            return done();
        });
    });

    describe('reduce', () => {

        it('should return an array of values generated by the callback function', (done) => {

            const actual = test.reduce((pv, cv) => pv + cv, 0);

            expect(actual).to.equal(3);

            return done();
        });
    });
});
